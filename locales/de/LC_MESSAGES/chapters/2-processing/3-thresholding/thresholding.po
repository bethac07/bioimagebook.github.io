# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024
# This file is distributed under the same license as the bioimage-book
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: bioimage-book \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-05 16:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: de\n"
"Language-Team: de <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1
msgid "Default Caption"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:16
msgid "Thresholding"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:18
msgid "Chapter outline"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:21
msgid "**Image segmentation** is the process of detecting **objects** in an image"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:22
msgid ""
"**Global thresholding** identifies pixel values above or below a "
"particular threshold"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:23
msgid "The choice of threshold can introduce **bias**"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:24
msgid ""
"**Automated thresholding methods** can often determine a good threshold "
"based upon the **image histogram** and **statistics** -- but only if "
"certain assumptions are met"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:25
msgid ""
"Thresholding is more powerful when combined with **filtering & "
"subtraction**"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:44
msgid "Introduction"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:46
msgid "Before we can measure anything in an image, we first need to detect it."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:48
msgid ""
"Sometimes, 'detection' might involve [manually drawing regions of "
"interest (ROIs)](chap_rois). However, this laborious process does not "
"scale very well. It can also be rather subjective."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:52
msgid ""
"In this chapter, we will begin to explore alternative ways to identify "
"**objects** within images. An 'object' is something we want to detect; "
"depending upon the application, an object might be a nucleus, a cell, a "
"vessel, a person, a bird, a car, a helicopter... more or less anything we"
" might find in an image."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:55
msgid ""
"This process of detecting objects is called **image segmentation**. If we"
" can automate image segmentation, this is not only likely to be much "
"faster than manually annotating regions but should also give more "
"reproducible results."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:61
msgid "Binary & labeled images"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:63
msgid "Image objects are commonly represented using **binary images**."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:65
msgid ""
"Each pixel in a binary image can have one of two values. Usually, these "
"values are 0 and 1. In some software (including ImageJ) a binary image "
"has the values 0 and 255, but this doesn't really make any difference to "
"how it is used: the key point for our purposes is that one of the values "
"represents the foreground (i.e. pixels that are part of an object), and "
"the other value represents the background."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:69
msgid ""
"For the rest of this chapter, we will assume that our binary images use 0"
" for the background (shown as black) and 1 for the foreground (shown as "
"white)."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:71
msgid ""
"This is important: if we can generate a binary image in which all our "
"objects of interest are in the foreground, we can then use this binary "
"image to help us make measurements of those objects."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:73
msgid ""
"One way to do this involves identifying individual objects in the binary "
"image by labeling **connected components**. A connected component is "
"really just a connected group of foreground pixels, which together "
"represent a distinct object. By labeling connected components, we get a "
"**labeled image** in which the pixels belonging to each object have a "
"unique integer value. All the pixels with the same value belong either to"
" the background (if the value is 0) or to the same object."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:78
msgid ""
"If required, we can then trace the boundaries of each labeled object to "
"create **regions of interest (ROIs)**, such as those used to make "
"measurement in ImageJ and other software."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:109
msgid ""
"Examples of a grayscale (blobs.gif), binary and labelled image. In (C), "
"each label has been assigned a unique color for display. In (D), ROIs "
"have been generated from (C) and superimposed on top of (A). It is common"
" to use a LUT for labeled images that assigns a different color to each "
"pixel value."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:115
msgid ""
"For that reason, a lot of image analysis workflows involve binary images "
"along the way. Most of this chapter will explore the most common way of "
"generating a binary image: **thresholding**."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:149
msgid "Connectivity"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:152
msgid ""
"Identifying multiple objects in a binary image involves separating "
"distinct groups of pixels that are considered 'connected' to one another,"
" and then creating a ROI or label for each group. Connectivity in this "
"sense can be defined in different ways. For example, if two pixels have "
"the same value and are immediately beside one another (above, below, to "
"the left or right, or diagonally adjacent) then they are said to be "
"_8-connected_, because there are 8 different neighboring locations "
"involved. Pixels are _4-connected_ if they are horizontally or vertically"
" adjacent, but _not_ only diagonally."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:157
msgid ""
"The choice of connectivity can make a big difference in the number and "
"sizes of objects found, as the example on the right shows (distinct "
"objects are shown in different colors)."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md
msgid "Question"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:165
msgid "What do you suppose _6-connectivity_ and _26-connectivity_ refer to?"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md
msgid "Answer"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:169
msgid ""
"6-connectivity is similar to 4-connectivity, but in 3D. If all 3D "
"diagonals are considered, we end up with each pixel having 26 neighbors."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:177
msgid "Global thresholding"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:179
msgid ""
"The easiest way to segment an image is by applying a **global "
"threshold**. This identifies pixels that are above or below a fixed "
"threshold value, giving a binary image as the output."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:182
msgid ""
"Global thresholding can be thought of as a [point "
"operation](chap_point_operations) because the output is based solely on "
"the value of each pixel, and not its location or its neighbors. For a "
"global threshold to work, the pixels inside objects need to have higher "
"or lower values than the other pixels. We will look at image processing "
"tricks to overcome this limitation later, but for now we will focus on "
"examples where we want to detect objects have values that are clearly "
"distinct from the background -- and so global thresholding could "
"potentially work."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:188
msgid "Thresholding using histograms"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:192
msgid ""
"It's possible to tell quite a lot about an image just by looking at its "
"histogram."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:194
msgid "Take the following example:"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:232
msgid ""
"Even without seeing the image, we can make some educated guesses about "
"its contents."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:234
msgid ""
"Firstly, there is a large peak to the left and a much shallower peak to "
"the right. This suggests that there are at least two distinct regions in "
"the image. Since the background of an image tends to contain many pixes "
"with similar values, I would guess that we might have an image with a "
"dark background."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:238
msgid ""
"In any case, a threshold around 20-25 looks like it would be a good "
"choice to separate the regions... whatever they may be."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:240
msgid ""
"If we then look at the image, we can see that we have in fact got a "
"fluorescence image depicting two nuclei. Applying a threshold of 20 does "
"achieve a good separation of the nuclei from the background: a successful"
" segmentation."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:268
msgid ""
"A simple fluorescence image containing two nuclei. We could determine a "
"potentially useful threshold based only on looking at the histogram."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:273
msgid ""
"Admittedly, that was a particularly easy example. We should try a "
"slightly harder one."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:300
msgid ""
"We still have a large peak, but this time it is towards the right. So I "
"would guess a light background rather than a dark one."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:303
msgid ""
"But the problem is that we seem to have *two* shallower peaks to the "
"left. That suggests at least three different classes of pixels in the "
"image."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:306
msgid ""
"From visual inspection, we might suppose a threshold of 140 would make "
"sense. Or perhaps around 220. It isn't clear."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:310
msgid ""
"This time, we *do* need to look at the image to decide. Even then, there "
"is no unambiguously 'correct' threshold. Rather, the one we choose "
"depends upon whether our goal is to identify the entire leaf or rather "
"just the darkest region."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:343
msgid ""
"An image where evaluating the histogram suggests two candidate "
"thresholds. The 'correct' threshold depends upon the desired outcome. "
"Note that here we identify pixels *below* the threshold value, rather "
"than above, because the background is ligher."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:347
msgid "Histograms can help us choose thresholds"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:350
msgid ""
"Histograms can be really useful when choosing threshold values -- but we "
"need to also incorporate knowledge of *why* we are thresholding."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:355
msgid "The importance of the threshold choice"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:357
msgid ""
"We've seen that histograms can help us identify suitable thresholds, but "
"they don't absolve us of the need to think. This is particularly evident "
"when objects are not very distinct. The exact choice of threshold can "
"then be crucial."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:361
msgid ""
"{numref}`fig-thresholds_manual` shows an example where the goal is to "
"detect the bright spots (lysosomes). No single global threshold can give "
"us perfect results, but at first glance many different thresholds can "
"appear to give *somewhat* sensible results. The histogram gives, at best,"
" a vague hint where a good threshold may lurk."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:425
msgid ""
"Applying different manually-chosen thresholds to the same image can give "
"quite different results."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:430
msgid ""
"I would like to convey three main messages from {numref}`fig-"
"thresholds_manual`:"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:432
msgid ""
"The **choice of threshold is crucial**, influencing the numbers *and* "
"areas of spots"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:433
msgid ""
"A **threshold that is too low** tends to **make structures bigger & merge"
" some together**"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:434
msgid ""
"A **threshold that is too high** tends to **make structures smaller & "
"miss some**"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:435
msgid ""
"Choosing a threshold manually gives a **huge opportunity to introduce "
"bias**"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:436
msgid ""
"We should **consider our errors when selecting output metrics**. For "
"example, if we needed to estimate the size of a spot from any of these "
"results then the median is likely to be preferable, because it is less "
"impacted by artificially large spots caused by merging."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:438
msgid ""
"A fourth point I would like to make is that **visualization matters "
"too**. Looking only at the binary images, it is difficult to really "
"evaluate *any* of the results. It helps enormously to overlay the "
"detected regions on top of the original image ({numref}`fig-"
"thresholds_manual_overlays`). From this we can see much more clearly that"
" none of the results are terribly good: every threshold we tried misses "
"some spots and merges others."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:448
msgid ""
"The binary images of {numref}`fig-thresholds_manual` viewed as overlays "
"instead."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:451
msgid "Beware summary plots!"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:455
msgid ""
"I sometimes sit in lab meetings where people discuss their image analysis"
" results without showing a single image. I don't approve of this at all."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:458
msgid ""
"It's easy to generate summary data with image analysis. In fact, it's "
"disturbingly easy to generate vastly different -- even conflicting -- "
"summary data by analyzing the same images in different ways. But, most "
"worryingly of all, one can often concoct a biologically-plausible-"
"sounding story around almost any results."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:462
msgid ""
"It's crucial to visualize *what* is being detected and measured in each "
"image, not just a spreadsheet or plot of the results. This is especially "
"important when applying batch processing to many images at once. It's "
"tempting to check a few images and then trust the summary spreadsheet for"
" the next 10,000, but I think there is no substitute for visualizing all "
"(or at least a large proportion) of the images themselves."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:466
msgid ""
"**For that reason, I would argue that devising an efficient visualization"
" strategy is every bit as important as devising an analysis strategy.**"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:468
msgid ""
"Image overlays are often a good way to do this: for each image you "
"analyze, create an RGB copy that outlines everything that was detected "
"and measured. Ideally, this would have brightness and contrast settings "
"defined in such a way that you can see at a glance when something has "
"gone wrong. You might only look at each image for a fraction of a second "
"through *Windows Explorer* or *Mac Finder*, but that can be enough to "
"spot issues that would otherwise be missed."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:473
msgid ""
"In [the last section](sec_thresholding_difficult) we'll see how applying "
"preprocessing steps to the image can allow us to reduce the proportion of"
" spots that are merged or missed. But first we'll consider how to "
"automate the threshold choice."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:478
msgid "Automated thresholds"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:480
msgid ""
"We don't want to choose thresholds manually if we can avoid it, because "
"it affords so much room for bias. On the other hand, there's no always-"
"applicable strategy to determine a threshold automatically; images vary "
"too much."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:483
msgid ""
"Nevertheless, there are some widely-used techniques capable of "
"determining reasonable thresholds for many images based upon the "
"histogram. Each one is based upon some underlying assumptions about the "
"histogram shape or image statistics. If these assumptions are met, the "
"method often performs well; if not, it may perform well *sometimes* and "
"disastrously at other times."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:487
msgid ""
"In this section, we'll look at several of the most common automated "
"thresholding methods using three images. Each image exhibits a different "
"kind of histogram that is commonly found in bioimages:"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:490
msgid ""
"**Bimodal:** with two distinct peaks, corresponding to foreground and "
"background"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:491
msgid ""
"**Unimodal:** mostly background noise, with some interesting signal at "
"one end"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:492
msgid ""
"**Dominant background:** one large background peak, with a long tail of "
"foreground pixels"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:548
msgid "Images with three different types of histogram."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:554
msgid "Otsu's method"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:556
msgid ""
"By its nature, global thresholding assumes that there are two classes of "
"pixel in the image -- those that belong to interesting objects, and those"
" that do not -- and pixels in each class have different intensity values "
"[^fn_2]. In principle, if we could identify the pixels for each of the "
"two classes, we could calculate statistics such as the mean and variance "
"(i.e. standard deviation squared) for them both separately."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:562
msgid ""
"Nobuyuki Otsu (1979). \"A threshold selection method from gray-level "
"histograms\". *IEEE Trans. Sys. Man. Cyber.* 9 (1): 62–66. "
"https://doi.org/10.1109/TSMC.1979.4310076"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:565
msgid ""
"**Otsu's method**, introduced in 1979, has become an extremely popular "
"approach to determining a threshold. It's commonly described, somewhat "
"intimidatingly, as *'minimizing the intra-class intensity variance'*. In "
"essence, calculating a threshold using Otsu's method involves adding the "
"variance of the background pixels to the variance of the foreground "
"pixels, for all possible thresholds. The threshold that is selected is "
"the one for which the sum of the variances is smallest."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:570
msgid ""
"We can think of this as trying to keep the distributions of foreground "
"and background pixels 'compact': two peaks that spread as little as "
"possible."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:572
msgid ""
"Otsu's method performs very well on data with a bimodal histogram, with a"
" deep valley in between. Unfortunately, a lot of microscopy images don't "
"have clearly bimodal histograms, and so the method may not be such a good"
" choice."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:602
msgid ""
"Thresholding using Otsu's method. This performs best on the cell image "
"with a bimodal histogram. For the spots image, there is no separation "
"between peaks to find; as a result, approximately half the pixels are "
"identified as foreground. The method also performs quite poorly for the "
"nucleus image, despite this previously being identified as an 'easier' "
"image for thresholding."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:607
msgid "Minimum method"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:609
msgid ""
"The **Minimum method** provides an alternative threshold that also "
"assumes a bimodal histogram."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:611
msgid ""
"The starting point is the image histogram. As can be seen in {numref"
"}`fig-thresholds_histogram_types`, the counts tend to be somewhat 'noisy'"
" with lots of tiny spurious peaks. The Minimum method operates by "
"smoothing the histogram, replacing each count value with the average of "
"itself and the neighboring counts. By repeating this process, eventually "
"the spurious peaks are removed until (hopefully) precisely two peaks "
"remain. The threshold is then the location of the deepest point in the "
"valley between those peaks."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:617
msgid ""
"The result of this process is illustrated in {numref}`fig-"
"thresholds_method_minimum`."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:699
msgid ""
"Thresholding using the Minimum method. The smoothed histograms used in "
"the calculation are shown in red, with the original histograms shown "
"(faintly) in gray. A line connecting the two final peaks is also "
"included, and the threshold marked with a dot. <br/> This works well on "
"the cells image and quite well on the nuclei image. However it fails "
"badly on the spots image, where almost everything is detected as "
"foreground. This is a case where the method converges (due to the image "
"being noisy, so having lots of small peaks in the histogram) even though "
"we might prefer it had not."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:703
msgid ""
"One 'feature' of the Minimum method is that *it is not guaranteed to "
"converge*. It is entirely possible that no amount of smoothing will "
"result in a histogram with 2 peaks: perhaps there is only 1 peak, or none"
" at all if all pixels are just a constant value."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:706
msgid ""
"This could potentially be an advantage: it may be better to return no "
"threshold than to return a really bad one. However, in most real images "
"we cannot count on the method not converging: it often *does* converge, "
"even if it does not necessarily converge to any desirable value."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:713
msgid "Triangle method"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:715
msgid ""
"The 'triangle method' is a popular approach to determining a threshold "
"that works especially well in images where there is one dominant "
"background peak, and the ideal threshold should be at the base of that "
"peak."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:717
msgid ""
"The general idea is that a a line is drawn from the peak of the histogram"
" to the last bin that contains any pixels. Then a perpendicular line is "
"plotted to the histogram itself, and the distance to the histogram "
"maximized. The direction of the line depends upon whether the peak is "
"toward the left or the right of the histogram; all counts on the other "
"side are ignored."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:721
msgid ""
"The width and height of the histogram are normalized to deal with the "
"fact that pixel values and intensity counts are in completely different "
"units, and therefore in completely different scales."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:723
msgid ""
"The explanation is confusing, but hopefully {numref}`fig-"
"thresholds_method_triangle` depicts it more clearly -- and provides an "
"intuition for when and why it might be appropriate."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:817
msgid ""
"Thresholding using the Triangle method. Because all example histograms "
"have a dominant peak, this performs quite well in all cases -- although "
"tends to detect more foreground pixels in the cell image than other "
"methods (because the threshold is at the base of the peak rather than "
"between the two modes). <br/> The histograms depict the triangles that "
"give the method its name. They have been normalized and truncated to "
"include only the relevant part."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:824
msgid "Mean method"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:826
msgid ""
"An alternative simple approach is to skip the histogram altogether, and "
"just use the mean of all pixel values."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:828
msgid ""
"This can actually give quite good reasons on many real-world images -- "
"although this may be more through luck than design. It's not a method I "
"typically use myself."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:861
msgid "Thresholding using the Mean method."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:866
msgid "Mean & Standard deviation"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:868
msgid ""
"We can add a bit more to the *Mean method* by incorporating the standard "
"deviation, scaled by a constant. The threshold becomes *mean + k x "
"standard.deviation*, where we can adjust *k* based upon our attitude "
"towards sensitivity vs. specificity."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:871
msgid ""
"The main advantage of this approach is that it should not fail "
"catastropically in cases where we have an image that is mostly just noise"
" (assuming *k* is large enough), unlike methods that require a bimodal "
"histogram. However the disadvantage is that it is not robust: the "
"threshold can be pulled higher or lower by outliers, or by foreground "
"values being very different from background values."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:905
msgid "Thresholding using the Mean + k x std.dev. method, with k = 3."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:910
msgid "Median & Median Absolute Deviation"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:912
msgid ""
"A more robust alternative to using the mean and standard deviation is to "
"use the **median and median absolute deviation (MAD)** to determine a "
"threshold."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:914
msgid ""
"If the pixel values of an image were to be sorted, the **median** is the "
"value that would be in the middle. The **MAD** is calculated as follows:"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:917
msgid "Subtract the median from all pixels"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:918
msgid ""
"Compute the absolute value of the result of (1) (i.e. flip the sign of "
"negative values, so that all are positive)"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:919
msgid "Compute the median of the result of (2)"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:921
msgid ""
"An intriguingly useful property of the MAD is that it can be scaled by "
"1.482 to resemble a (more robust) standard deviation. The [Wikipedia "
"article](https://en.wikipedia.org/wiki/Median_absolute_deviation) "
"explains this in more detail."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:924
msgid ""
"Typically, we would use the *median + k x MAD x 1.482*, where we can "
"adjust *k* as if it was used to scale a standard deviation. This is "
"helpful because standard deviations are easier for (most of) us to tune."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:927
msgid ""
"Using the MAD to define a threshold remains fairly uncommon, but I "
"personally like the method a lot when working with very noisy "
"fluorescence images. The three main requirements for this method to work "
"are:"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:930
msgid ""
"Most of the image should be background, and noisy (a completely constant "
"background will give a MAD of 0, and a bad threshold)"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:931
msgid "The noise should (more or less) follow a normal distribution"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:932
msgid ""
"The image shouldn't be too large, because calculating the median exactly "
"is slow"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:934
msgid ""
"The last point is not always an issue: we can calculate the median much "
"more quickly if we use a histogram, although we may lose some precision "
"due to the binning required when building the histogram."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:969
msgid ""
"Thresholding using the MAD method, with *k = 3*. This is a strong "
"candiate to be my preferred method for the 'spots' image, because it is "
"effective when looking for small signals buried in noise."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:974
msgid "Clipping confounds automated thresholds"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:977
msgid ""
"If the data is [clipped](chap_bit_depths), then the statistics of the "
"pixel values and shape of the image histogram are changed. This means "
"that the theory underlying why an automated threshold should work might "
"well no longer apply."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:980
msgid "*This is another reason why clipping should always be avoided!*"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:984
msgid "Are automated thresholds less biased?"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:986
msgid ""
"I sometimes see the use of automated thresholding methods justified "
"because they are *'less biased than manual thresholds'*."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:988
msgid "I am unconvinced."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:990
msgid ""
"I *do* agree that automated thresholds are strongly preferable to "
"subjectively picking a threshold by eye -- but only if they can be shown "
"to work reliably for a particular dataset. A bad automated threshold can "
"easily introduce a systematic bias that is much worse than manually "
"setting a threshold for each image."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:997
msgid "Thresholding difficult data"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:999
msgid ""
"Applying global thresholds is all well and good in easy images for which "
"a threshold clearly exists, but in practice things are rarely so "
"straightforward – and often no threshold, manual or automatic, produces "
"useable results. This section anticipates the next chapter on filters by "
"showing that, with some extra processing, thresholding can be redeemed "
"even if it initially seems to perform badly."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1002
msgid "Thresholding noisy data"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1004
msgid ""
"Noise is one problem that affects thresholds, especially in live cell "
"imaging."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1006
msgid ""
"The top half of {numref}`fig-thresholds_noisy` reproduces the nuclei from"
" {numref}`fig-thresholds_nuclei_histogram` but with extra noise added to "
"simulate less than ideal imaging conditions. Although the nuclei are "
"still clearly visible in the image (A), the two classes of pixels (which "
"were previously easy to separate) have now been merged together in the "
"histogram (B). The triangle threshold method, which had performed well "
"before, now gives less attractive results \\(C), because the noise has "
"caused the ranges of background and nuclei pixels to overlap."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1010
msgid ""
"*However,* if we apply a Gaussian filter to smooth the image, a lot of "
"the the random noise is reduced (see {ref}`chap_filters`). This results "
"in a histogram dramatically more similar to that in the original, "
"(almost) noise-free image, and the threshold is again quite successful "
"(F)."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1057
msgid ""
"Noise can affect thresholding. After the addition of simulated noise to "
"the image in {numref}`fig-thresholds_nuclei_histogram`, the distinction "
"between nuclei and non-nuclei pixels is much harder to identify in the "
"histogram (B). Any threshold would result in a large number of "
"incorrectly-identified pixels. However, applying a Gaussian filter (here,"
" $\\sigma = 2$) to reduce noise can dramatically improve the situation "
"(E). Thresholds in \\(C) and (F) were computed using the triangle method."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1061
msgid "Local thresholding"
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1063
msgid ""
"Another common problem is that the structures that should be detected "
"appear on top of a background that itself varies in brightness. This was "
"the reason no threshold performed very well in {numref}`fig-"
"thresholds_manual`."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1066
msgid ""
"Ideally, we would like to apply a threshold that varies relative to the "
"local background."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1069
msgid ""
"W. Niblack, An introduction to Digital Image Processing, Prentice-Hall, "
"1986."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1072
msgid ""
"There are a variety of **local thresholding** methods available, many of "
"which are variations on the **Niblack method**. This calculates the mean "
"and standard deviation of pixels *in a local window around each pixel*, "
"for example a square of 25 x 25 pixels."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1075
msgid ""
"A separate threshold is then generated for every pixel,defined as "
"*local_mean - k x local_std.dev*. Note the sign: *-k* is used, because "
"the original definition was focussed on recognizing dark text on a light "
"background, but *k* itself can be a negative number if needed."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1078
msgid "An example is shown in {numref}`fig-thresholds_local_niblack`."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1115
msgid "Local thresholding to detect spots using Niblack's method."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1118
msgid ""
"To be honest, I don't tend to use this approach for bioimages. I find the"
" window size and *k* parameters difficult to tune, and it suffers the "
"problem of the mean and standard deviation not being robust."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1121
msgid ""
"However, local thresholding becomes more interesting and powerful if we "
"take matters into our own hands by thinking about the problem from a "
"slightly different angle."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1123
msgid ""
"Suppose we had a second image that contained values equal to the "
"thresholds we want to apply at each pixel. If we simply *subtract* this "
"second image from the first, we can then apply a global threshold of 0 to"
" detect what we want."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1126
msgid ""
"Alternatively, we could subtract an image with values that aren't exactly"
" equal to the local thresholds, but similar enough to effectively flatten"
" out the background so that a global threshold can be applied. This then "
"provides us access to all global automated thresholding methods, and an "
"intuition of how the histograms ought to look for the methods to be "
"appropriate. {numref}`fig-thresholds_local` shows this in action."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1176
msgid ""
"Thresholding to detect structures appearing on a varying background. No "
"global threshold may be sufficiently selective _(top row)_. However, if a"
" 'background image' can be created, (here using a large median filter), "
"and then subtracted, a single threshold can give much better results "
"_(bottom row)_. This is equivalent to applying a varying threshold to the"
" original image."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:1179
msgid ""
"The difficult part is creating the second image. Filters are the key, and"
" the subject of the [next chapter](chap_filters)."
msgstr ""

#: ../../../chapters/2-processing/3-thresholding/thresholding.md:559
msgid ""
"Of course there may be multiple classes for different kinds of objects, "
"and perhaps multiple thresholds would make more sense. There is a "
"variation of Otsu's method for identifying multiple thresholds."
msgstr ""

