# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022-2024
# This file is distributed under the same license as the bioimage-book package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: bioimage-book \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-02-05 16:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../chapters/1-concepts/6-files/python.md:15
msgid "Python: Files & file formats"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:17
msgid "When it comes to working with images in Python, there are various important packages. You might only need to use one - but it helps to know about the existence of the others."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:20
msgid "To avoid adding lots of extra dependencies to this book, not all the packages are installed here."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:32
msgid "Useful Python packages"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:36
msgid "Pillow"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:38
msgid "[Pillow's authors describe it as 'the friendly PIL fork'](https://pillow.readthedocs.io/en/stable/), where **PIL** is the *Python Imaging Library*."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:40
msgid "It is indeed *quite* friendly, and it does much more than just reading and writing images - even supporting features to draw onto images."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:42
msgid "The main disadvantage of Pillow is that it doesn't work directly with NumPy arrays. Therefore, if it's a NumPy array that you want then you'll need to add in a few extra lines of code to convert the images."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:66
msgid "ImageIO"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:68
msgid "[imageio](https://imageio.readthedocs.io/en/stable/) is my preferred Python package for most straightforward image reading - and the main one I've used in this book."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:70
msgid "It's also the [recommended alternative to *SciPy*'s deprecated `imread` function](https://docs.scipy.org/doc/scipy-1.1.0/reference/generated/scipy.misc.imread.html#scipy.misc.imread)."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:72
msgid "`imageio.imread(path)` returns a NumPy array automatically. This makes it easy to use for straightforward things, especially when working with 2D images (single-channel or RGB)."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:75
msgid "imageio can use different backends, which includes [Pillow](https://imageio.readthedocs.io/en/stable/_autosummary/imageio.plugins.pillow.html) and [tifffile](https://imageio.readthedocs.io/en/stable/_autosummary/imageio.plugins.tifffile.html) - so you can potentially get the advantages of both through using imageio, while writing less code yourself."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:86
msgid "tifffile"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:88
msgid "[tifffile](https://pypi.org/project/tifffile/) is a small package[^fn_tf] that is very handy if you need to get into the details of reading and writing TIFF images."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:100
msgid "AICSImageIO"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:102
msgid "[AICSImageIO](https://github.com/AllenCellModeling/aicsimageio) is an excellent package for reading lots of image formats in Python - and is particularly strong when it comes to reading multidimensional images and metadata."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:104
msgid "It can even handle a variety of microscopy formats, and optionally use [Bio-Formats](https://www.openmicroscopy.org/bio-formats/)."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:106
msgid "These features, alongside its consistent way of handling pixel sizes and dimensions, make it my main choice for scientific images."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:110
msgid "OpenSlide"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:112
msgid "[OpenSlide](https://openslide.org) is widely used in the world of digital pathology. It's limited to 2D RGB data, but its big benefit is that it supports a range of pyramidal whole slide images."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:117
msgid "Dask"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:119
msgid "[Dask](https://dask.org) is a project you should know about if you're working with big datasets in Python."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:121
msgid "Dask isn't an image reading package, but [dask-image](https://image.dask.org/) includes an `imread` function that can be used if you know you want your image to be in a dask array in the end."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:125
msgid "Napari"
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:127
msgid "Finally, [Napari](https://napari.org) isn't an image reading library either; rather, it's a fantastic open-source, extensible, multidimensional image viewer for Python."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:129
msgid "Napari can bring everything together - working with dask arrays and reading images with plugins, such as [napari-aicsimageio](https://github.com/AllenCellModeling/napari-aicsimageio) and [napari-lazy-openslide](https://github.com/manzt/napari-lazy-openslide)."
msgstr ""

#: ../../../chapters/1-concepts/6-files/python.md:90
msgid "Small in that its code is mostly just one file. But it's [a pretty epic file](https://github.com/cgohlke/tifffile/blob/master/tifffile/tifffile.py)."
msgstr ""
